<!DOCTYPE html>
<html lang="ar" dir="rtl">

    <%- include("./partials/head.ejs") %>
<style>
.spinner {
   width: 56px;
   height: 56px;
   display: grid;
   border: 4.5px solid #0000;
   border-radius: 50%;
   border-color: #dbdcef #0000;
   animation: spinner-e04l1k 1s infinite linear;
}

.spinner::before,
.spinner::after {
   content: "";
   grid-area: 1/1;
   margin: 2.2px;
   border: inherit;
   border-radius: 50%;
}

.spinner::before {
   border-color: #ff9847 #0000;
   animation: inherit;
   animation-duration: 0.5s;
   animation-direction: reverse;
}

.spinner::after {
   margin: 8.9px;
}

@keyframes spinner-e04l1k {
   100% {
      transform: rotate(1turn);
   }
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.loading-content {
  background: white;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
}

.toast-container {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 10000;
}

.toast {
  background: #28a745;
  color: white;
  padding: 15px 20px;
  border-radius: 5px;
  margin-bottom: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  animation: slideIn 0.3s ease-out;
}

.toast.error {
  background: #dc3545;
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.group-card {
  transition: transform 0.2s;
}

.group-card:hover {
  transform: translateY(-2px);
}

.edit-group-btn{
  background-color: #ff9847 !important; 
  color: white !important;
  border: 1px solid transparent !important;
}

.edit-group-btn:hover{
  background-color: #e67e22 !important;
  color: white !important;
}

.delete-group-btn{
  background-color: #dc3545 !important; 
  color: white !important;
  border: 1px solid transparent !important;
}

.delete-group-btn:hover{
  background-color: #c82333 !important;
  color: white !important;
}

/* Simple table design - white and black only */
.table thead th {
  background-color: #000;
  color: #fff;
  font-weight: 600;
  padding: 1rem 0.75rem;
  border: none;
}

.table tbody tr {
  border-bottom: 1px solid #e9ecef;
  transition: background-color 0.2s ease;
}

.table tbody tr:hover {
  background-color: #f8f9fa;
}

.table tbody td {
  padding: 1rem 0.75rem;
  vertical-align: middle;
}

.group-name-cell {
  font-weight: 600;
  color: #000;
}

.group-description-cell {
  font-size: 0.875rem;
  color: #666;
  margin-top: 0.25rem;
}

.status-badge {
  padding: 0.4rem 0.8rem;
  border-radius: 4px;
  font-weight: 500;
  font-size: 0.8rem;
}

.btn-group .btn {
  border-radius: 4px;
  margin: 0 2px;
  border: 1px solid;
}

.edit-group-btn {
  background-color: #000 !important;
  border-color: #000 !important;
  color: #fff !important;
}

.edit-group-btn:hover {
  background-color: #333 !important;
  border-color: #333 !important;
  color: #fff !important;
}

.delete-group-btn {
  background-color: #dc3545 !important;
  border-color: #dc3545 !important;
  color: #fff !important;
}

.delete-group-btn:hover {
  background-color: #c82333 !important;
  border-color: #c82333 !important;
  color: #fff !important;
}

/* Modal enhancements - simple black and white */
.modal-content {
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.modal-header.bg-dark {
  background-color: #000 !important;
  border-bottom: 2px solid #000 !important;
}

.modal-body .form-control {
  border-radius: 4px;
  transition: all 0.2s ease;
}

.modal-body .form-control:focus {
  border-color: #000;
  box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.25);
  background-color: #fff;
}

.modal-footer {
  border-top: 2px solid #000;
  background-color: #f8f9fa;
}

.btn-dark {
  background-color: #000;
  border-color: #000;
  font-weight: 500;
}

.btn-dark:hover {
  background-color: #333;
  border-color: #333;
}

.btn-outline-dark {
  border-color: #000;
  color: #000;
}

.btn-outline-dark:hover {
  background-color: #000;
  border-color: #000;
  color: #fff;
}

.form-control-lg {
  padding: 0.75rem 1rem;
  font-size: 1rem;
}

.border-2 {
  border-width: 2px !important;
}
</style>

<body class="g-sidenav-show rtl bg-gray-100">
  <%- include("./partials/aside.ejs") %>
  
  <!-- Main content -->
  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">
    <!-- Navbar -->
    <%- include("./partials/nav.ejs") %>
    <!-- End Navbar -->
    
    <div class="container-fluid py-2">
      <div class="row">
        <div class="col-lg-12">
          <div class="row">
            <div class="col-md-12 mb-lg-0 mb-4">
              <div class="card mt-4">
                <div class="card-header pb-0 p-3">
                  <div class="row">
                    <div class="col-6 d-flex align-items-center">
                      <h5 class="mb-0">إدارة المجموعات</h5>
                    </div>
                    <div class="col-6 text-start">
                      <button type="button" class="btn btn-dark mb-0" onclick="showAddGroupModal()">
                        <i class="material-symbols-rounded text-sm">add</i>&nbsp;&nbsp;إضافة مجموعة جديدة
                      </button>
                    </div>
                  </div>
                </div>
                <div class="card-body p-4">
                  <div class="table-responsive">
                    <table class="table table-hover align-items-center mb-0">
                      <thead>
                        <tr>
                          <th class="text-uppercase text-white text-xs font-weight-bolder ps-3">اسم المجموعة</th>
                          <th class="text-center text-uppercase text-white text-xs font-weight-bolder">الحالة</th>
                          <th class="text-center text-uppercase text-white text-xs font-weight-bolder">الإجراءات</th>
                        </tr>
                      </thead>
                      <tbody id="groupsTableBody">
                        <!-- Groups will be loaded here -->
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Add/Edit Group Modal -->
  <div class="modal fade" id="groupModal" tabindex="-1" aria-labelledby="groupModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content border-2 border-dark">
        <div class="modal-header bg-dark text-white border-bottom-2 border-dark">
          <h5 class="modal-title font-weight-bold" id="groupModalLabel">
            <i class="material-symbols-rounded me-2">group_add</i>
            إضافة مجموعة جديدة
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body p-4 bg-white">
          <form id="groupForm">
            <div class="row">
              <div class="col-md-12 mb-4">
                <label class="form-label fw-bold text-dark mb-2">
                  <i class="material-symbols-rounded me-1">label</i>
                  اسم المجموعة
                </label>
                <input type="text" class="form-control form-control-lg border-2 border-dark" id="groupName" name="groupName" placeholder="أدخل اسم المجموعة" required>
                <div class="form-text text-muted">اسم المجموعة مطلوب</div>
              </div>
              <div class="col-md-12">
                <label class="form-label fw-bold text-dark mb-2">
                  <i class="material-symbols-rounded me-1">description</i>
                  وصف المجموعة
                </label>
                <textarea class="form-control form-control-lg border-2 border-dark" id="groupDescription" name="groupDescription" placeholder="أدخل وصف المجموعة (اختياري)" rows="4"></textarea>
                <div class="form-text text-muted">يمكنك ترك هذا الحقل فارغاً</div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer bg-light border-top-2 border-dark">
          <button type="button" class="btn btn-outline-dark btn-lg" data-bs-dismiss="modal">
            <i class="material-symbols-rounded me-1">close</i>
            إلغاء
          </button>
          <button type="button" class="btn btn-dark btn-lg px-4" onclick="saveGroup()">
            <i class="material-symbols-rounded me-1">save</i>
            حفظ
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Loading Overlay -->
  <div id="loadingOverlay" class="loading-overlay" style="display: none;">
    <div class="loading-content">
      <div class="spinner"></div>
      <p class="mt-3">جاري التحميل...</p>
    </div>
  </div>

  <!-- Toast Container -->
  <div id="toastContainer" class="toast-container"></div>

  <script>
    let currentGroupId = null;
    let groups = [];

    function showToast(message, isError = false) {
      const toastContainer = document.getElementById('toastContainer');
      const toast = document.createElement('div');
      toast.className = `toast ${isError ? 'error' : ''}`;
      toast.textContent = message;
      
      toastContainer.appendChild(toast);
      
      setTimeout(() => {
        toast.remove();
      }, 5000);
    }

    function showLoading() {
      document.getElementById('loadingOverlay').style.display = 'flex';
    }

    function hideLoading() {
      document.getElementById('loadingOverlay').style.display = 'none';
    }

    function showAddGroupModal() {
      currentGroupId = null;
      document.getElementById('groupModalLabel').textContent = 'إضافة مجموعة جديدة';
      document.getElementById('groupForm').reset();
      new bootstrap.Modal(document.getElementById('groupModal')).show();
    }

    function showEditGroupModal(groupId) {
      console.log('Edit group ID:', groupId);
      
      // Find the group data from the groups array
      const group = groups.find(g => g._id === groupId);
      if (!group) {
        showToast('المجموعة غير موجودة', true);
        return;
      }
      
      console.log('Edit group data:', group);
      currentGroupId = group._id;
      document.getElementById('groupModalLabel').textContent = 'تعديل المجموعة';
      document.getElementById('groupName').value = group.groupName;
      document.getElementById('groupDescription').value = group.groupDescription || '';
      new bootstrap.Modal(document.getElementById('groupModal')).show();
    }

    async function saveGroup() {
      const form = document.getElementById('groupForm');
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      // Debug: Log the data being sent
      console.log('Sending data:', data);
      console.log('Current Group ID:', currentGroupId);

      showLoading();

      try {
        const url = currentGroupId ? `/employee/group/${currentGroupId}` : '/employee/group';
        const method = currentGroupId ? 'PUT' : 'POST';

        console.log('Request URL:', url);
        console.log('Request Method:', method);

        const response = await fetch(url, {
          method: method,
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        console.log('Response status:', response.status);
        const result = await response.json();
        console.log('Response data:', result);

        if (response.ok) {
          showToast(currentGroupId ? 'تم تحديث المجموعة بنجاح' : 'تم إضافة المجموعة بنجاح');
          bootstrap.Modal.getInstance(document.getElementById('groupModal')).hide();
          loadGroups();
        } else {
          showToast(result.error || 'حدث خطأ', true);
        }
      } catch (error) {
        console.error('Error:', error);
        showToast('حدث خطأ في الاتصال', true);
      } finally {
        hideLoading();
      }
    }

    async function deleteGroup(groupId) {
      if (!confirm('هل أنت متأكد من حذف هذه المجموعة؟')) {
        return;
      }

      showLoading();

      try {
        const response = await fetch(`/employee/group/${groupId}`, {
          method: 'DELETE'
        });

        const result = await response.json();

        if (response.ok) {
          showToast('تم حذف المجموعة بنجاح');
          loadGroups();
        } else {
          showToast(result.error || 'حدث خطأ', true);
        }
      } catch (error) {
        console.error('Error:', error);
        showToast('حدث خطأ في الاتصال', true);
      } finally {
        hideLoading();
      }
    }

    function renderGroups() {
      const tbody = document.getElementById('groupsTableBody');
      tbody.innerHTML = '';

      groups.forEach(group => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td class="ps-3">
            <div class="d-flex px-2 py-1">
              <div class="d-flex flex-column justify-content-center">
                <h6 class="mb-0 text-sm group-name-cell">${group.groupName}</h6>
                ${group.groupDescription ? `<p class="group-description-cell">${group.groupDescription}</p>` : ''}
              </div>
            </div>
          </td>
          <td class="align-middle text-center text-sm">
            <span class="status-badge ${group.isActive ? 'bg-success text-white' : 'bg-secondary text-white'}">
              ${group.isActive ? 'نشطة' : 'غير نشطة'}
            </span>
          </td>
          <td class="align-middle text-center">
            <div class="btn-group" role="group">
              <button class="btn btn-sm edit-group-btn" onclick="showEditGroupModal('${group._id}')" title="تعديل">
                <i class="material-symbols-rounded">edit</i>
              </button>
              <button class="btn btn-sm delete-group-btn" onclick="deleteGroup('${group._id}')" title="حذف">
                <i class="material-symbols-rounded">delete</i>
              </button>
            </div>
          </td>
        `;
        tbody.appendChild(row);
      });
    }

    async function loadGroups() {
      showLoading();

      try {
        const response = await fetch('/employee/groups');
        const result = await response.json();

        if (response.ok) {
          groups = result;
          renderGroups();
        } else {
          showToast('حدث خطأ في تحميل المجموعات', true);
        }
      } catch (error) {
        console.error('Error:', error);
        showToast('حدث خطأ في الاتصال', true);
      } finally {
        hideLoading();
      }
    }

    // Load groups on page load
    document.addEventListener('DOMContentLoaded', loadGroups);
  </script>

  <%- include("./partials/scripts.ejs") %>
</body>
</html>